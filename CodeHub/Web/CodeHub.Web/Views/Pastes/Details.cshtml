@model CodeHub.Web.ViewModels.Paste.PasteDetailsViewModel
@{
    ViewBag.Title = "Paste Details";
}
@section styles {
    @Styles.Render("~/Content/codemirror")
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="row">
        <div class="col-md-6">
            <h3>
                <span class="glyphicon glyphicon-file" aria-hidden="true"></span>@Model.Title
            </h3>
            <h4>
                <span class="glyphicon glyphicon-user" aria-hidden="true"></span>Author: @Model.Author
            </h4>
        </div>
        <div class="row">
            <div class="col-md-6 pull-right">
                @Html.Action("UserOptions", new { pasteId = Model.Id })
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">Syntax: @Model.Syntax</div>
            <div class="col-md-2">Hitted: @Model.Hits</div>
            <div class="col-md-3">Created on:@Html.DisplayFor(m => m.CreatedOn)</div>
            <div class="col-md-2">
                @Html.DisplayFor(m => m.HasBug)
            </div>
            <div class="col-md-2">
                @if (Model.IsPrivate)
                {
                    <p class="text text-info">
                        <span class="glyphicon glyphicon-ok"> Private</span>
                    </p>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                @Html.DisplayFor(m => m.Content)
            </div>
            <div class="col-md-4 text-justify">
                @Html.DisplayFor(m => m.Description)
            </div>
        </div>
    </div>
</div>
@if (Request.IsAuthenticated)
{
    <div class="row">
        @Html.Partial("_AddCommentPartial", new CodeHub.Web.ViewModels.Comment.AddCommentViewModel(Model.Id))
        <p id="warning-msg" class="text-warning">Comment's Content is required</p>
    </div>
}

<div id="comments">
    @if (Model.Comments != null)
    {
        foreach (var comment in Model.Comments)
        {
            @Html.Partial("_CommentPartial", comment)
        }
    }
</div>

@section scripts{
    @Scripts.Render("~/Scripts/codemirror")
    @Scripts.Render("~/bundles/jqueryajax")
    <script type="text/javascript">
    $(function () {
        var textEditor = document.getElementById("code");
        var editor = new CodeMirror.fromTextArea(textEditor, {
            mode: "@Model.SyntaxMode",
            lineNumbers: true,
            matchBrackets: true,
            theme: "vibrant-ink",
            showCursorWhenSelecting: true,
            undoDepth: 100,
            lineWrapping: true,
            readOnly: true,
            autofocus: false,
        });

        editor.setSize('100%', '100%');

        $('#warning-msg').hide();
        $('.comment-edit').hide();

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        });
    });

    function clearTextArea(data) {
        $('textarea#Content').val('');
        $('#warning-msg').hide();
    }

    function checkRequirements() {
        var textarea = $('textarea#Content').val();
        if (textarea == '') {
            $('#warning-msg').show(600);
        }
    }

    $('#comments').on('click', 'a.btn-sm.btn-warning', function (ev) {
        ev.preventDefault();

        var $this = $(this);
        var commentId = $this.data("selector");
        var idToReplace = "#comment-" + commentId + "-content";
        var comment = $(idToReplace);

        $('#comment-edit-default-' + commentId).hide();
        $('#comment-edit-options-' + commentId).show();

        $('a.btn-sm.btn-default[data-selector=' + commentId + ']').click(function (ev) {
            ev.preventDefault();

            $('#edittable-textarea-' + commentId).replaceWith(comment);
            $('#comment-edit-default-' + commentId).show();
            $('#comment-edit-options-' + commentId).hide();
        });

        var commentContent = $(idToReplace).text().trim();
        var textarea = $('<textarea />')
            .attr({ id: 'edittable-textarea-' + commentId, rows: 3, name: 'Content' })
            .addClass('form-control')
            .val(commentContent);

        $(idToReplace).replaceWith(textarea);

        $('a.btn-sm.btn-success[data-selector=' + commentId + ']').click(function (ev) {
            ev.preventDefault();
            var content = $('#edittable-textarea-' + commentId).val();
            $.ajax({
                url: '/Comments/Edit',
                type: 'POST',
                data: {
                    id: commentId,
                    content: content,
                    pasteId: '@Model.Id'
                        },
                    success: function (data) {
                        comment.text(data.Content);
                        $('#edittable-textarea-' + commentId).replaceWith(comment);
                        $('#comment-edit-default-' + commentId).show();
                        $('#comment-edit-options-' + commentId).hide();
                    },
                    error: function (request, error) {
                        $('#warning-msg-' + commentId).text('Content is required!');
                        $('#warning-msg-' + commentId).fadeOut(6000);
                    }
                });
            });
        });
    </script>
}
